name: Deploy (git pull over SSH)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Prepare ~/.ssh
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          touch ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts

      - name: Add server to known_hosts
        run: |
          ssh-keyscan -p "${{ secrets.SSH_PORT }}" -T 5 "${{ secrets.SSH_HOST }}" >> ~/.ssh/known_hosts

      - name: SSH and git pull
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script_stop: true
          script: |
            set -e
            cd "${{ secrets.REPO_PATH }}"
            
            echo "üîß Starting deployment process..."
            echo "üìç Current directory: $(pwd)"
            echo "üìç Current branch: $(git branch --show-current)"
            echo "üìç Current commit: $(git rev-parse --short HEAD)"
            
            # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Git –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –ø—Ä–æ–±–ª–µ–º —Å divergent branches
            echo "‚öôÔ∏è Configuring Git..."
            git config pull.rebase false
            git config --global --add safe.directory $(pwd)
            
            # –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
            echo "üì• Fetching changes..."
            git fetch --all --prune
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ä–∞—Å—Ö–æ–¥—è—â–∏–µ—Å—è –≤–µ—Ç–∫–∏
            LOCAL=$(git rev-parse HEAD)
            REMOTE=$(git rev-parse origin/${{ secrets.BRANCH || 'main' }})
            
            if [ "$LOCAL" != "$REMOTE" ]; then
              echo "‚ö†Ô∏è Local and remote branches are different"
              echo "Local:  $LOCAL"
              echo "Remote: $REMOTE"
              echo "üîÑ Performing hard reset to origin/${{ secrets.BRANCH || 'main' }}..."
              git reset --hard origin/${{ secrets.BRANCH || 'main' }}
              echo "‚úÖ Repository updated to latest version"
            else
              echo "‚úÖ Repository is already up to date"
              git pull origin "${{ secrets.BRANCH || 'main' }}" || git reset --hard origin/${{ secrets.BRANCH || 'main' }}
            fi
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            echo "üìç Updated to commit: $(git rev-parse --short HEAD)"
            echo "üìç Commit message: $(git log -1 --pretty=%B)"
            
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
            echo "üì¶ Installing dependencies..."
            /usr/bin/npm install
            
            # –°–æ–±–∏—Ä–∞–µ–º –ø—Ä–æ–µ–∫—Ç
            echo "üèóÔ∏è Building project..."
            /usr/bin/npm run build
            
            # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º nginx
            echo "üîÑ Reloading nginx..."
            sudo systemctl reload nginx
            
            echo "üéâ Deployment completed successfully!"
