#!/bin/bash

echo "üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –¥–µ–ø–ª–æ—è frontend_axenta"
echo "======================================="

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –∫–æ–º–º–∏—Ç
echo "üìç –ü–æ—Å–ª–µ–¥–Ω–∏–π –∫–æ–º–º–∏—Ç:"
git log --oneline -1
echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–±–æ—Ä–∫–∏
echo "üèóÔ∏è –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–±–æ—Ä–∫—É..."
if [ -d "dist" ]; then
    echo "‚úÖ –ü–∞–ø–∫–∞ dist —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    echo "üìÅ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ dist:"
    ls -la dist/
    echo ""
    
    echo "üìÑ –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–æ–≤:"
    du -sh dist/*
    echo ""
else
    echo "‚ùå –ü–∞–ø–∫–∞ dist –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    echo "üîß –ü–æ–ø—ã—Ç–∫–∞ —Å–±–æ—Ä–∫–∏..."
    npm run build
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º package.json
echo "üì¶ –ü—Ä–æ–≤–µ—Ä—è–µ–º package.json..."
if [ -f "package.json" ]; then
    echo "‚úÖ package.json –Ω–∞–π–¥–µ–Ω"
    echo "üîñ –í–µ—Ä—Å–∏—è: $(node -p "require('./package.json').version")"
    echo "üìú –°–∫—Ä–∏–ø—Ç—ã:"
    node -p "Object.keys(require('./package.json').scripts).join(', ')"
else
    echo "‚ùå package.json –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi
echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Vite
echo "‚öôÔ∏è –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Vite..."
if [ -f "vite.config.ts" ]; then
    echo "‚úÖ vite.config.ts –Ω–∞–π–¥–µ–Ω"
else
    echo "‚ùå vite.config.ts –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi
echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
echo "üîß –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:"
if [ -f ".env" ]; then
    echo "‚úÖ .env –Ω–∞–π–¥–µ–Ω"
    echo "üìã –°–æ–¥–µ—Ä–∂–∏–º–æ–µ .env:"
    cat .env | grep -v "SECRET\|PASSWORD\|TOKEN" | head -10
else
    echo "‚ö†Ô∏è .env –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

if [ -f ".env.production" ]; then
    echo "‚úÖ .env.production –Ω–∞–π–¥–µ–Ω"
    echo "üìã –°–æ–¥–µ—Ä–∂–∏–º–æ–µ .env.production:"
    cat .env.production | grep -v "SECRET\|PASSWORD\|TOKEN" | head -10
else
    echo "‚ö†Ô∏è .env.production –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi
echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º GitHub workflow —Ñ–∞–π–ª—ã
echo "üöÄ –ü—Ä–æ–≤–µ—Ä—è–µ–º GitHub Actions:"
if [ -d ".github/workflows" ]; then
    echo "‚úÖ –ü–∞–ø–∫–∞ .github/workflows –Ω–∞–π–¥–µ–Ω–∞"
    echo "üìÑ Workflow —Ñ–∞–π–ª—ã:"
    ls -la .github/workflows/
else
    echo "‚ùå –ü–∞–ø–∫–∞ .github/workflows –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
fi
echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º index.html
echo "üìÑ –ü—Ä–æ–≤–µ—Ä—è–µ–º index.html..."
if [ -f "dist/index.html" ]; then
    echo "‚úÖ dist/index.html –Ω–∞–π–¥–µ–Ω"
    echo "üìè –†–∞–∑–º–µ—Ä: $(wc -c < dist/index.html) –±–∞–π—Ç"
    echo "üîç –ü–µ—Ä–≤—ã–µ 10 —Å—Ç—Ä–æ–∫:"
    head -10 dist/index.html
else
    echo "‚ùå dist/index.html –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi
echo ""

echo "üéØ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:"
echo "1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ GitHub Actions –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏"
echo "2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ secrets –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ"
echo "3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä–∞"
echo "4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ"
echo "5. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é nginx"
echo ""

echo "üîó –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏:"
echo "- GitHub Actions: https://github.com/$(git remote get-url origin | sed 's/.*github.com[:/]\([^.]*\).*/\1/')/actions"
echo "- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ–∫—Ä–µ—Ç–æ–≤: https://github.com/$(git remote get-url origin | sed 's/.*github.com[:/]\([^.]*\).*/\1/')/settings/secrets/actions"
