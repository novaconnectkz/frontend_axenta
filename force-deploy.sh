#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –¥–µ–ø–ª–æ—è —Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º –∫—ç—à–∞

echo "üöÄ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π –¥–µ–ø–ª–æ–π —Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º –∫—ç—à–∞"
echo "=============================================="

# –°–æ–∑–¥–∞–µ–º –Ω–µ–±–æ–ª—å—à–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
TIMESTAMP=$(date +"%Y-%m-%d %H:%M:%S")
COMMENT_FILE="src/utils/deployTimestamp.ts"

echo "üìù –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª —Å –≤—Ä–µ–º–µ–Ω–Ω–æ–π –º–µ—Ç–∫–æ–π –¥–µ–ø–ª–æ—è..."
cat > "$COMMENT_FILE" << EOF
// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –¥–µ–ø–ª–æ–µ–≤
// –ü–æ—Å–ª–µ–¥–Ω–∏–π –¥–µ–ø–ª–æ–π: $TIMESTAMP

export const DEPLOY_TIMESTAMP = '$TIMESTAMP';
export const DEPLOY_HASH = '$(git rev-parse --short HEAD)';

// –≠—Ç–æ—Ç —Ñ–∞–π–ª –ø–æ–º–æ–≥–∞–µ—Ç –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –¥–µ–ø–ª–æ–µ–≤
// –ï—Å–ª–∏ –≤—ã –≤–∏–¥–∏—Ç–µ —ç—Ç—É –≤—Ä–µ–º–µ–Ω–Ω—É—é –º–µ—Ç–∫—É –≤ –±—Ä–∞—É–∑–µ—Ä–µ, –∑–Ω–∞—á–∏—Ç –¥–µ–ø–ª–æ–π –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ
EOF

echo "‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª: $COMMENT_FILE"

# –û–±–Ω–æ–≤–ª—è–µ–º –≤–µ—Ä—Å–∏—é –≤ package.json
echo "üì¶ –û–±–Ω–æ–≤–ª—è–µ–º –≤–µ—Ä—Å–∏—é –≤ package.json..."
CURRENT_VERSION=$(node -p "require('./package.json').version")
NEW_VERSION="0.0.$(date +%s)"

# –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π package.json —Å –Ω–æ–≤–æ–π –≤–µ—Ä—Å–∏–µ–π
node -p "
const pkg = require('./package.json');
pkg.version = '$NEW_VERSION';
JSON.stringify(pkg, null, 2);
" > package.json.tmp && mv package.json.tmp package.json

echo "üìà –í–µ—Ä—Å–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞: $CURRENT_VERSION ‚Üí $NEW_VERSION"

# –ü–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ–º –ø—Ä–æ–µ–∫—Ç –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
echo "üèóÔ∏è –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞..."
npm run build:production

if [ $? -eq 0 ]; then
    echo "‚úÖ –°–±–æ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–∞"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä –Ω–æ–≤–æ–π —Å–±–æ—Ä–∫–∏
    echo "üìè –†–∞–∑–º–µ—Ä –Ω–æ–≤–æ–π —Å–±–æ—Ä–∫–∏:"
    du -sh dist/*
    
    # –ö–æ–º–º–∏—Ç–∏–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
    echo "üì§ –ö–æ–º–º–∏—Ç–∏–º –∏–∑–º–µ–Ω–µ–Ω–∏—è..."
    git add .
    git commit -m "deploy: –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫—ç—à–∞ ($TIMESTAMP)

- –û–±–Ω–æ–≤–ª–µ–Ω–∞ –≤–µ—Ä—Å–∏—è –¥–æ $NEW_VERSION
- –î–æ–±–∞–≤–ª–µ–Ω–∞ –≤—Ä–µ–º–µ–Ω–Ω–∞—è –º–µ—Ç–∫–∞ –¥–µ–ø–ª–æ—è
- –ü–µ—Ä–µ—Å–æ–±—Ä–∞–Ω –ø—Ä–æ–µ–∫—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫—ç—à–∞
- Hash –∫–æ–º–º–∏—Ç–∞: $(git rev-parse --short HEAD)"

    # –ü—É—à–∏–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
    echo "üöÄ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ GitHub..."
    git push origin main
    
    if [ $? -eq 0 ]; then
        echo ""
        echo "‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ GitHub!"
        echo ""
        echo "üîÑ –ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –¥–∞–ª—å—à–µ:"
        echo "1. GitHub Actions –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø—É—Å—Ç–∏—Ç –¥–µ–ø–ª–æ–π"
        echo "2. –°–µ—Ä–≤–µ—Ä –ø–æ–ª—É—á–∏—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –∫–æ–¥"
        echo "3. Nginx –Ω–∞—á–Ω–µ—Ç –æ—Ç–¥–∞–≤–∞—Ç—å –Ω–æ–≤—É—é –≤–µ—Ä—Å–∏—é"
        echo ""
        echo "‚è±Ô∏è –û–∂–∏–¥–∞–π—Ç–µ 2-5 –º–∏–Ω—É—Ç –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –¥–µ–ø–ª–æ—è"
        echo ""
        echo "üåê –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –¥–µ–ø–ª–æ—è:"
        echo "https://github.com/novaconnectkz/frontend_axenta/actions"
        echo ""
        echo "üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç:"
        echo "https://axenta.glonass-saratov.ru"
        echo ""
        echo "üí° –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π:"
        echo "1. –û—Ç–∫—Ä–æ–π—Ç–µ —Å–∞–π—Ç –≤ –±—Ä–∞—É–∑–µ—Ä–µ"
        echo "2. –ù–∞–∂–º–∏—Ç–µ Ctrl+F5 (–ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ)"
        echo "3. –û—Ç–∫—Ä–æ–π—Ç–µ –∫–æ–Ω—Å–æ–ª—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ (F12)"
        echo "4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –∏–∫–æ–Ω–∫–∞ WebSocket –∏—Å—á–µ–∑–ª–∞ –∏–∑ header"
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É —á–µ—Ä–µ–∑ 30 —Å–µ–∫—É–Ω–¥
        echo ""
        echo "‚è∞ –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ —á–µ—Ä–µ–∑ 30 —Å–µ–∫—É–Ω–¥..."
        sleep 30
        ./check-production.sh
        
    else
        echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –Ω–∞ GitHub"
        exit 1
    fi
else
    echo "‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏"
    exit 1
fi
