// –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–µ–º–æ —Ä–µ–∂–∏–º–æ–º

import usersService from '@/services/usersService';

// –í–∫–ª—é—á–µ–Ω–∏–µ –¥–µ–º–æ —Ä–µ–∂–∏–º–∞ –¥–ª—è –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
export function enableDemoMode(): void {
  console.log('üé≠ –í–∫–ª—é—á–µ–Ω–∏–µ –¥–µ–º–æ —Ä–µ–∂–∏–º–∞...');
  
  // –í–∫–ª—é—á–∞–µ–º –¥–µ–º–æ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  usersService.enableMockData();
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤ localStorage
  localStorage.setItem('axenta_demo_mode', 'true');
  
  console.log('‚úÖ –î–µ–º–æ —Ä–µ–∂–∏–º –≤–∫–ª—é—á–µ–Ω');
}

// –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –¥–µ–º–æ —Ä–µ–∂–∏–º–∞ –¥–ª—è –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
export function disableDemoMode(): void {
  console.log('üîß –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –¥–µ–º–æ —Ä–µ–∂–∏–º–∞...');
  
  // –û—Ç–∫–ª—é—á–∞–µ–º –¥–µ–º–æ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  usersService.disableMockData();
  
  // –£–¥–∞–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–∑ localStorage
  localStorage.removeItem('axenta_demo_mode');
  
  console.log('‚úÖ –î–µ–º–æ —Ä–µ–∂–∏–º –æ—Ç–∫–ª—é—á–µ–Ω');
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –¥–µ–º–æ —Ä–µ–∂–∏–º–∞
export function isDemoModeEnabled(): boolean {
  const demoMode = localStorage.getItem('axenta_demo_mode');
  return demoMode === 'true';
}

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –¥–µ–º–æ —Ä–µ–∂–∏–º–∞
export function toggleDemoMode(): boolean {
  const isEnabled = isDemoModeEnabled();
  
  if (isEnabled) {
    disableDemoMode();
    return false;
  } else {
    enableDemoMode();
    return true;
  }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–µ–º–æ —Ä–µ–∂–∏–º–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
export function initDemoMode(): void {
  const demoMode = localStorage.getItem('axenta_demo_mode');
  
  if (demoMode === 'true') {
    console.log('üé≠ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–µ–º–æ —Ä–µ–∂–∏–º–∞ –∏–∑ localStorage...');
    usersService.enableMockData();
    console.log('‚úÖ –î–µ–º–æ —Ä–µ–∂–∏–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
  }
}

// –î–æ–±–∞–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –≤ –∫–æ–Ω—Å–æ–ª–∏ –±—Ä–∞—É–∑–µ—Ä–∞
declare global {
  interface Window {
    enableDemo: () => void;
    disableDemo: () => void;
    toggleDemo: () => boolean;
    isDemoEnabled: () => boolean;
  }
}

// –î–æ–±–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –≤ window –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –æ—Ç–ª–∞–¥–∫–∏
if (typeof window !== 'undefined') {
  window.enableDemo = enableDemoMode;
  window.disableDemo = disableDemoMode;
  window.toggleDemo = toggleDemoMode;
  window.isDemoEnabled = isDemoModeEnabled;
}
