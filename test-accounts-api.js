/**
 * –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ API –∑–∞–ø—Ä–æ—Å–∞ –∫ /api/cms/accounts/
 */

const axios = require('axios');

async function testAccountsAPI() {
  try {
    console.log('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –∑–∞–ø—Ä–æ—Å–∞ –∫ /api/cms/accounts/');
    
    // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ localStorage (—Å–∏–º—É–ª—è—Ü–∏—è)
    const token = process.env.AXENTA_TOKEN || 'your-token-here';
    const companyId = process.env.AXENTA_COMPANY_ID || 'your-company-id';
    
    console.log('üìã –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞:');
    console.log('- URL: https://axenta.cloud/api/cms/accounts/');
    console.log('- Token:', token ? `EXISTS (${token.substring(0, 10)}...)` : 'MISSING');
    console.log('- Company ID:', companyId || 'MISSING');
    
    const config = {
      method: 'GET',
      url: 'https://axenta.cloud/api/cms/accounts/',
      params: {
        page: 1,
        per_page: 50,
        ordering: 'name'
      },
      headers: {
        'Authorization': `Token ${token}`,
        'X-Tenant-ID': companyId,
        'Content-Type': 'application/json',
        'Accept': 'application/json'
      },
      timeout: 30000
    };
    
    console.log('\nüì° –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å...');
    const response = await axios(config);
    
    console.log('\n‚úÖ –£—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç:');
    console.log('- Status:', response.status);
    console.log('- Count:', response.data.count);
    console.log('- Results length:', response.data.results?.length);
    console.log('- Next:', response.data.next);
    console.log('- Previous:', response.data.previous);
    
    if (response.data.results && response.data.results.length > 0) {
      console.log('\nüìä –ü–µ—Ä–≤–∞—è –∑–∞–ø–∏—Å—å:');
      const firstAccount = response.data.results[0];
      console.log(JSON.stringify(firstAccount, null, 2));
    }
    
    return response.data;
    
  } catch (error) {
    console.error('\n‚ùå –û—à–∏–±–∫–∞ API –∑–∞–ø—Ä–æ—Å–∞:');
    console.error('- Status:', error.response?.status);
    console.error('- Status Text:', error.response?.statusText);
    console.error('- Data:', error.response?.data);
    console.error('- Message:', error.message);
    
    if (error.response?.status === 401) {
      console.error('\nüîê –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–æ–∫–µ–Ω –∏ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞');
    }
    
    throw error;
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç –µ—Å–ª–∏ —Å–∫—Ä–∏–ø—Ç –≤—ã–∑–≤–∞–Ω –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  testAccountsAPI()
    .then(data => {
      console.log('\nüéâ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
      process.exit(0);
    })
    .catch(error => {
      console.error('\nüí• –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π');
      process.exit(1);
    });
}

module.exports = { testAccountsAPI };
